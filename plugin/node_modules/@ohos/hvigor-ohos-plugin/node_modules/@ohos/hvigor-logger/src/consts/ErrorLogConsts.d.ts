export declare const UNDEFINED_CODE = "00000000";
export declare const UNDEFINED_DESC = "";
export declare const UNDEFINED_CAUSE = "Unknown";
export declare const UNDEFINED_POS = "";
export declare const BUILD_CACHE_DIR = "build-cache-dir";
export declare const HVIGOR_USER_HOME_DIR_NAME = ".hvigor";
export declare const PLUGIN_LOG_TYPE = "plugin_log";
export declare const NORMAL_LOG_TYPE = "normal_log";
export declare const SPLIT_TAG = "<HVIGOR_ERROR_SPLIT>";
export declare const DEFAULT_MORE_INFO_URL_CN: string | undefined;
export declare const DEFAULT_MORE_INFO_URL_EN: string | undefined;
export declare enum CountryEnum {
    CN = "cn",
    EN = "en"
}
export declare enum MergeType {
    /**
     * 收集所有ErrorInfo里的相关字段，按入栈的先后顺序仅保留最后一个ErrorInfo的数据。
     */
    COLLECT_LAST = 1,
    /**
     * 收集所有ErrorInfo里的相关字段，按入栈的先后顺序仅保留第一个ErrorInfo的数据。
     */
    COLLECT_FIRST = 2,
    /**
     * 收集所有ErrorInfo里的相关字段，按入栈的先后顺序拼接合并。
     */
    COLLECT_ALL = 3
}
/**
 * 枚举可用于合并的字段，默认采用字符串比较方式（如果是数组则对内容进行字符串比较），用户可通过MergeOption来自定义比较函数。
 */
export declare enum MergeKeyEnum {
    CODE = "code",
    CAUSE = "cause",
    POSITION = "position",
    SOLUTIONS = "solutions",
    MORE_INFO = "moreInfo"
}
/**
 * 子系统编码（同错误码方案里的编码）
 */
export declare enum SubSystemEnum {
    UNKNOWN = "000",
    HVIGOR = "103",
    PACKAGE = "200"
}
export declare enum LogLevel {
    DEBUG = "debug",
    INFO = "info",
    WARN = "warn",
    ERROR = "error"
}
export declare enum MetricLogType {
    DEBUG = "debug",
    INFO = "info",
    WARN = "warn",
    ERROR = "error",
    DETAIL = "detail"
}
export declare enum ErrorCode {
    ERROR_00 = "00",
    ERROR_01 = "01",
    ERROR_02 = "02",
    ERROR_03 = "03",
    ERROR_04 = "04",
    ERROR_05 = "05",
    ERROR_06 = "06",
    ERROR_07 = "07",
    ERROR_08 = "08",
    ERROR_09 = "09"
}
export declare const ErrorCodeDescription: Record<ErrorCode, string>;
