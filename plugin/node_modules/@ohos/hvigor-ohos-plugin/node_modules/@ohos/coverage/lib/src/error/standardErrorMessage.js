"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StandardErrorMessage = exports.getFormattedErrorMsg = void 0;
const os_1 = require("os");
const lineSeparator = os_1.EOL;
function getFormattedErrorMsg(title) {
    return lineSeparator + 'ErrorCode: ' + exports.StandardErrorMessage[title].errorCode +
        lineSeparator + 'Description: ' + exports.StandardErrorMessage[title].description;
}
exports.getFormattedErrorMsg = getFormattedErrorMsg;
exports.StandardErrorMessage = {
    PATH_DOES_NOT_EXIST: {
        errorCode: '00507001',
        description: 'The path {path} does not exist. Check whether the hap/hsp package is signed.',
        cause: '',
        action: ''
    },
    SCOPE_IS_INVALID: {
        errorCode: '00507002',
        description: 'scope={scope} is invalid. Enter a value that contains only digits, letters, underscores (_), and periods (.). Use commas (,) to separate multiple test suites or test cases.',
        cause: '',
        action: ''
    },
    NO_TEST_RESULTS: {
        errorCode: '00507003',
        description: 'No test results because unlock screen failed in developer mode.',
        cause: '',
        action: ''
    },
    SOME_COVERAGE_FILE_DOES_NOT_EXIST: {
        errorCode: '00507004',
        description: 'coverageFile contains a file that does not exist.',
        cause: '',
        action: ''
    },
    PROJECT_PATH_DOES_NOT_EXIST: {
        errorCode: '00507005',
        description: 'projectPath does not exist',
        cause: '',
        action: ''
    },
    REPORT_PATH_DOES_NOT_EXIST: {
        errorCode: '00507006',
        description: 'reportPath does not exist',
        cause: '',
        action: ''
    },
    COVERAGE_FILE_DOES_NOT_EXIST: {
        errorCode: '00507007',
        description: 'coverageFile does not exist',
        cause: '',
        action: ''
    },
    GET_INIT_COVERAGE_DATA_FAILED: {
        errorCode: '00507008',
        description: 'getInitCoverageData failed,',
        cause: '',
        action: ''
    },
    GET_JS_COVERAGE_DATA_FAILED: {
        errorCode: '00507009',
        description: 'getjsCoverageData failed,',
        cause: '',
        action: ''
    },
    MERGE_COVERAGE_JSON_FAILED: {
        errorCode: '00507010',
        description: 'merge coverageJson failed,',
        cause: '',
        action: ''
    },
};
